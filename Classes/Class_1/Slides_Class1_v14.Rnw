% Font options: 10pm, 11pt, 12pt
% Align headings left instead of center: nocenter
\documentclass[xcolor=x11names,compress]{beamer}
%\documentclass[xcolor=x11names,compress,handout]{beamer}
\usepackage[]{graphicx}
\usepackage[]{color}
\usepackage{booktabs}
\usepackage{hyperref}
\usepackage{tikz}
\usepackage{multirow}
\usepackage{multicol}
\usepackage{dcolumn}
\usepackage{bigstrut}
\usepackage{amsmath} 
\usepackage{xcolor,colortbl}
\usepackage{amssymb}
%\newcommand{\done}{\cellcolor{teal}#1}

%% Beamer Layout %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\useoutertheme[subsection=false,shadow]{miniframes}
\useinnertheme{default}
\usefonttheme{serif}
\usepackage{Arev}
\usepackage{pdfpages}

\setbeamerfont{title like}{shape=\scshape}
\setbeamerfont{frametitle}{shape=\scshape, size=\normalsize}

\definecolor{dkblue}{RGB}{0,0,102}

\setbeamercolor*{lower separation line head}{bg=dkblue} 
\setbeamercolor*{normal text}{fg=black,bg=white} 
\setbeamercolor*{alerted text}{fg=red} 
\setbeamercolor*{example text}{fg=black} 
\setbeamercolor*{structure}{fg=black} 
 
\setbeamercolor*{palette tertiary}{fg=black,bg=black!10} 
\setbeamercolor*{palette quaternary}{fg=black,bg=black!10} 

\renewcommand{\(}{\begin{columns}}
\renewcommand{\)}{\end{columns}}
\newcommand{\<}[1]{\begin{column}{#1}}
\renewcommand{\>}{\end{column}}

\setbeamertemplate{navigation symbols}{} 
\setbeamertemplate{footline}[frame number]
\setbeamertemplate{caption}{\raggedright\insertcaption\par}

\setbeamersize{text margin left=5pt,text margin right=5pt}

\AtBeginSection{\frame{\sectionpage}}
\usepackage{xcolor}
\hypersetup{
    colorlinks,
    linkcolor={red!50!black},
    citecolor={blue!50!black},
    urlcolor={blue!80!black}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<<setup, echo=F, warning=F, message=F>>=
library(knitr)
library(tidyverse)
library(stargazer)
library(xtable)
library(zeligverse)
library(broom)
library(purrr)
library(plotly)
library(MASS)
library(webshot)
knitr::opts_chunk$set(echo = F, warning=F, message=F, dev='png', dpi=144, cache=T)
@

<<egdata1,echo=FALSE,warning=FALSE,message=FALSE>>=
set.seed(05410)
N <- 1000
gender <- rbinom(N,1,0.5)
income <- gender*1000+rnorm(N,4000,800)
redist <- gender*(-3)+rnorm(N,0,2)

d <- data.frame(gender,income,redist)
d$gender <- as.factor(d$gender)
@



\title{FLS 6441 - Methods III: Explanation and Causation}
\subtitle{Week 1 - Review of Regression}
\author{Jonathan Phillips}
\date{March 2019}

\begin{document}

\frame{\titlepage}

\begin{frame}
\frametitle{Course Objectives}
\begin{enumerate}
\item Change how you think about quantitative methods, \textit{explaining} politics, and not just describing it
\pause
\item Understand the 'toolkit' of methods used in top journals
\pause
\item Apply those methods to your own research questions
\pause
\end{enumerate}
\begin{center}
\href{https://jonnyphillips.github.io/Methods_III}{Course Website}
\end{center}
\end{frame}

\begin{frame}
\frametitle{Course Topics}
\begin{enumerate}
\item Review of Regression (21st March)
\pause
\item A Framework for Explanation (28th March)
\pause
\item Field Experiments (4th April)
\item Survey and Lab Experiments (11th April)
\item Randomized Natural Experiments (18th April, Semana Santa)
\pause
\item Instrumental Variables (25th April)
\item Discontinuities (2nd May)
\pause
\item Difference-in-Differences (9th May)
\item Controlling for Confounding (16th May)
\item Matching (23rd May)
\item Comparative Cases and Process Tracing (30th May)
\pause
\item Generalizability, Reproducibility and Mechanisms (6th June)
\end{enumerate}
\end{frame}

\begin{frame}
\frametitle{Course Schedule}
\begin{itemize}
\item Wednesday 18h - Submit Replication Task
\pause
\item Thursday 14h-16h - Class
\pause
\item Thursday 16.15-17.30 - Lab
\pause
\item Friday 10h-12h - Office Hours (DCP 2061)
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Project}
\begin{itemize}
\item Quality $>$ Quantity
\pause
\item Max 15 pages, English or Portuguese
\pause
\item Submit paper and code by email to me by 30th June 2019
\pause
\item Use at least one of the methods studied in class
\pause
\item \textit{Tip:} Pick a simple question and dataset
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{If you get Lost:}
\begin{enumerate}
\item Don't panic! Everyone needs to see this content 3 or 4 times to 'get' it
\pause
\item Simplify your thoughts - all the methods are doing \textit{less} than you think they are
\pause
\item Re-read the slides and core readings
\pause
\item Search online
\pause
\item Ask your friends - they can explain better than me
\pause
\item Ask me
\end{enumerate}
\end{frame}

\begin{frame}
\frametitle{Today's Objectives}
\begin{enumerate}
\item What Does Regression Actually Do?
\item Guide to 'Smart' Regression
\item What Does Regression NOT Do?
\end{enumerate}
\end{frame}

\section{What Does Regression Actually Do?}

\begin{frame}
\frametitle{Data}
\begin{itemize}
\item We work with variables, which VARY!
\end{itemize}
\begin{multicols}{2}
<<var, results='asis'>>=
data <- tibble(Variable=rnorm(10000,0,1)) 
data %>% sample_n(10) %>% xtable() %>% print(include.rownames=F)

@
\columnbreak
<<var2, fig.keep="all">>=
data %>% ggplot() + 
  geom_line(aes(x=Variable), stat="density") +
  theme_classic() +
  theme(axis.text=element_text(size=14),
        axis.title=element_text(size=14,face="bold"))
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Data}
\begin{itemize}
\item We work with variables, which VARY!
\end{itemize}
\begin{multicols}{2}
<<var3, results='asis'>>=
data <- tibble(Variable_1=rnorm(10000,0,1),
               Variable_2=rnorm(10000,0,1)) 
data %>% sample_n(10) %>% xtable() %>% print(include.rownames=F)

@
\columnbreak
<<var4, fig.keep="all">>=
den3d <- kde2d(data$Variable_1, data$Variable_2)
#plot_ly(x = den3d$x, y = den3d$y, z = den3d$z) %>% add_surface()
persp(den3d, box=F, theta=220, phi=45)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Data}
\begin{itemize}
\item We work with variables, which VARY!
\end{itemize}
\begin{multicols}{2}
<<var5, results='asis'>>=
data <- tibble(Variable_1=rnorm(100000,0,1),
               Variable_2=0.3*Variable_1+0.07*Variable_1^2+rnorm(100000,0,0.2)) 
data %>% sample_n(10) %>% xtable() %>% print(include.rownames=F)

@
\columnbreak
<<var6, fig.keep="all">>=
den3d <- kde2d(data$Variable_1, data$Variable_2)
#plot_ly(x = den3d$x, y = den3d$y, z = den3d$z) %>% add_surface()
#orca("var2.png")
persp(den3d, box=F, theta=220, phi=45)
@
\end{multicols}
\end{frame}


<<ols_two_charts>>=
set.seed(12345)

n <- 30

#Real coef of 1
data_orig <- tibble(x=rnorm(n,2,0.6),
               y_rnd=rnorm(n,0,0.6),
               y=x+y_rnd)

coefs <- seq(0,2,0.5)

tilt <- function(coef,d){
  d %>% mutate(coef=coef,
               y_alt=y_rnd+coef*x,
               intercept=2-2*coef,
               yhat=intercept+coef*x) %>%
    ggplot() + geom_point(aes(x=x,y=y)) +
    geom_abline(aes(intercept=intercept,slope=coef),col="red") +
    geom_segment(aes(x=x,xend=x,y=y,yend=yhat), lty=2, col="red") +
  theme_classic() +
  xlim(0.5,3.5) +
  ylim(-0.3,4.5) +
  xlab("D")
}

ssr <- function(coef,d){
  d %>% mutate(coef=coef,
               y_alt=y_rnd+coef*x,
               intercept=2-2*coef,
               yhat=intercept+coef*x,
               resid_sq=(yhat-y)^2) %>%
  summarize(sum_resid_sq=sum(resid_sq)) %>%
    mutate(coef=coef)
}

optimize <- coefs %>% map_df(ssr,data_orig)
optimize_noise <- coefs %>% map_df(ssr,data_orig %>% mutate(y=y+rnorm(n,0,1)))
@

\begin{frame}
\frametitle{What Does Regression Actually Do?}
\begin{enumerate}
\item Regression as Least Squares
\item Regression as Conditional Expectation
\item Regression as (Partial) Correlation
\end{enumerate}
\end{frame}


\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\pause
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\pause
\end{itemize}
\begin{multicols}{2}
Slope = 0
<<graph_ols1, fig.height=2, fig.width=2>>=
tilt(0,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==0) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr1, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=0) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 0.5
<<graph_ols2, fig.height=2, fig.width=2>>=
tilt(0.5,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==0.5) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr2, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=0.5) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 1
<<graph_ols3, fig.height=2, fig.width=2>>=
tilt(1,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==1) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr3, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=1) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 1.5
<<graph_ols4, fig.height=2, fig.width=2>>=
tilt(1.5,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==1.5) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr4, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=1.5) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 2
<<graph_ols5, fig.height=2, fig.width=2>>=
tilt(2,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==2) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr5, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=2) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Regression identifies the line through the data that minimizes the sum of squared vertical distances 
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 1
<<graph_ols6, fig.height=2, fig.width=2>>=
tilt(1,data_orig)
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize %>% filter(coef==1) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr6, fig.height=2, fig.width=2>>=
optimize %>% filter(coef<=2) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  theme_classic() +
  geom_hline(yintercept=optimize %>% filter(coef==1) %>% pull(sum_resid_sq) %>% round(1),lty=2) +
  xlim(0,2) +
  ylim(10,30) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

%Add noise
\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item If we add pure \textit{noise} to $y$, our estimate of $\beta$ is unchanged
\begin{itemize}
\item The residual error increases
\end{itemize}
\item $y_i = \alpha + \beta D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
Slope = 1
<<graph_ols7, fig.height=2, fig.width=2>>=
set.seed(456)
tilt(1,data_orig %>% mutate(y=y+rnorm(n,0,1))) + geom_abline()
@
\columnbreak
Sum of Residuals$^2$ = \Sexpr{optimize_noise %>% filter(coef==1) %>% pull(sum_resid_sq) %>% round(1)}
<<graph_ssr7, fig.height=2, fig.width=2>>=
optimize_noise %>% filter(coef<=2) %>%
  ggplot() +
  geom_point(aes(x=coef,y=sum_resid_sq),col="red") +
  geom_hline(yintercept=optimize_noise %>% filter(coef==1) %>% pull(sum_resid_sq) %>% round(1),lty=2) +
  theme_classic() +
  xlim(0,2) +
  ylim(60,100) +
  ylab("Sum Residuals^2") +
  xlab("Slope")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE1, fig.height=2, fig.width=2>>=
set.seed(124)
n <- 30

data_fe <- tibble(group=factor(c(rep("a",n/2),rep("b",n/2))),
                  x=rnorm(n,2,0.6),
                  y=rnorm(n,0,0.6)) %>%
  mutate(x=case_when(group=="a"~x,
                     group=="b"~x+1),
         y=case_when(group=="a"~y,
                     group=="b"~y+1))

data_fe %>% ggplot() + 
  geom_point(aes(x=x,y=y)) +
  geom_smooth(aes(x=x,y=y),col="black",method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")

@
\columnbreak
Ignoring the dummy control variable, the slope coefficient is 1 
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE2, fig.height=2, fig.width=2>>=
data_fe %>% ggplot() + 
  geom_point(aes(x=x,y=y,col=group)) +
  geom_smooth(aes(x=x,y=y),col="black",method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")

@
\columnbreak
But the data points really represent two very different groups, blues and reds
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \beta_2 X_j + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE3, fig.height=2, fig.width=2>>=

data_fe %>% ggplot() + 
  geom_point(aes(x=x,y=y, col=group)) +
  geom_smooth(aes(x=x,y=y,col=group), method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")
@
\columnbreak
What if we treated each group \textit{separately}?
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \beta_2 X_j + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE4, fig.height=2, fig.width=2>>=
data_fe %>% mutate(y=case_when(group=="a"~y+0.5,
                               group=="b"~y-0.5)) %>%
  ggplot() + 
  geom_point(aes(x=x,y=y, col=group)) +
  geom_smooth(aes(x=x,y=y,col=group), method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")
@
\columnbreak
Dummy control variables \textit{remove} the average $Y$ differences between blues and reds
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \beta_2 X_j + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE5, fig.height=2, fig.width=2>>=
data_fe %>% mutate(y=case_when(group=="a"~y+0.5,
                               group=="b"~y-0.5)) %>%
  ggplot() + 
  geom_point(aes(x=x,y=y, col=group)) +
  geom_smooth(aes(x=x,y=y,col=group), method="lm",se=F) +
  geom_smooth(aes(x=x,y=y),col="black", method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")
@
\columnbreak
The new regression line for the full data now has a slope of zero
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Dummy control variables \textit{remove variation} associated with specific levels or categories
\begin{itemize}
\item The same for fixed effects
\end{itemize}
\item $y_{ij} = \alpha + \beta_1 D_{ij} + \beta_2 X_j + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_FE_last, fig.height=2, fig.width=2>>=

data_fe %>% ggplot() + 
  geom_point(aes(x=x,y=y, col=group)) +
  geom_smooth(aes(x=x,y=y,col=group), method="lm",se=F) +
  geom_smooth(data=data_fe %>% mutate(y=case_when(group=="a"~y+0.5,
                               group=="b"~y-0.5)), 
              aes(x=x,y=y),col="black", method="lm",se=F) +
    theme_classic() +
    xlim(1.2,4.5) +
    ylim(-1,2) + 
  theme(legend.position = "none") +
  xlab("D") +
  ylab("y")
@
\columnbreak
\footnotesize
Equivalently, dummy control variables restrict comparisons to \textbf{within the same group}:
\begin{enumerate}
\item How much does $X$ affect $Y$ within the blue group? 0
\item How much does $X$ affect $Y$ within the red group? 0
\item What's the average of (1) and (2) (weighted by the number of units in each group)? 0
\normalsize
\end{enumerate}
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Continuous control variables \textit{remove variation} based on how much the control explains $y$
\item $y_i = \alpha + \beta_1 D_i + \beta_2 X_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_control1, fig.height=2, fig.width=2>>=
set.seed(012)
data_control <- tibble(x=sample(seq(1,5,1),n,replace=T),
                       y_rnd=rnorm(n,0,0.6),
                       d=x/2+rnorm(n,2,0.6),
                       y=x+d+y_rnd,
                       y_no_x=d+y_rnd,
                       residuals=lm(y~x)$residuals)
#cor(data_control$y_no_x,data_control$residuals)
data_control %>% ggplot() + 
  geom_point(aes(x=d,y=y)) +
  geom_smooth(aes(x=d,y=y),col="black",method="lm",se=F) +
    theme_classic() +
  xlab("D") +
  ylab("y")

@
\columnbreak
<<reg_ols_control1>>=
reg_coef <- lm(y~d, data=data_control) %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)
@
The coefficient $\beta_1$ is \Sexpr{reg_coef} \\
Real effect = 1
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Continuous control variables \textit{remove variation} based on how much the control explains $y$
\item $y_i = \alpha + \beta_1 D_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_control2, fig.height=2, fig.width=2>>=
data_control %>% ggplot() + 
  geom_text(aes(x=d,y=y,label=x)) +
  geom_smooth(aes(x=d,y=y),col="black",method="lm",se=F) +
    theme_classic() +
  xlab("D") +
  ylab("y")
@
\columnbreak
The coefficient $\beta_1$ is \Sexpr{reg_coef} \\
Real effect = 1
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Continuous control variables \textit{remove variation} based on how much the control explains $y$
\item $y_i = \alpha + \beta_1 D_i + \beta_2 X_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_control3, fig.height=2, fig.width=2>>=
#cor(data_control$y_no_x,data_control$residuals)
data_control %>% ggplot() + 
  geom_text(aes(x=d,y=residuals,label=x)) +
  geom_smooth(aes(x=d,y=residuals),col="black",method="lm",se=F) +
  geom_smooth(aes(x=d,y=y),col="black",method="lm",se=F) +
    theme_classic() +
  xlab("D") +
  ylab("y")
@
\columnbreak
<<reg_ols_control3>>=
reg_coef2 <- lm(y~d+x, data=data_control) %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)
@
The coefficient $\beta_1$ is \Sexpr{reg_coef2} \\
Real effect = 1
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Least Squares}
\begin{itemize}
\item Continuous control variables \textit{remove variation} based on how much the control explains $y$
\item $y_i = \alpha + \beta_1 D_i + \beta_2 X_i + \epsilon_i$
\end{itemize}
\begin{multicols}{2}
<<graph_ols_control4, fig.height=2, fig.width=2>>=
data_control %>% ggplot() + 
  geom_text(aes(x=d,y=y,label=x)) +
  geom_smooth(aes(x=d,y=y),col="black",method="lm",se=F) +
  geom_smooth(data=data_control %>% filter(x==1),aes(x=d,y=y),col="#c6dbef",method="lm",se=F) +
  geom_smooth(data=data_control %>% filter(x==2),aes(x=d,y=y),col="#9ecae1",method="lm",se=F) +
  geom_smooth(data=data_control %>% filter(x==3),aes(x=d,y=y),col="#6baed6",method="lm",se=F) +
  geom_smooth(data=data_control %>% filter(x==4),aes(x=d,y=y),col="#4292c6",method="lm",se=F) +
  geom_smooth(data=data_control %>% filter(x==5),aes(x=d,y=y),col="#2171b5",method="lm",se=F) +
  theme_classic() +
  xlab("D") +
  ylab("y")
@
\columnbreak
<<reg_ols_control4>>=
reg_coef4_1 <- lm(y~d+x, data=data_control %>% filter(x==1))  %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)

reg_coef4_2 <- lm(y~d+x, data=data_control %>% filter(x==2))  %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)

reg_coef4_3 <- lm(y~d+x, data=data_control %>% filter(x==3))  %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)

reg_coef4_4 <- lm(y~d+x, data=data_control %>% filter(x==4))  %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)

reg_coef4_5 <- lm(y~d+x, data=data_control %>% filter(x==5))  %>% 
  tidy() %>%
  filter(term=="d") %>%
  pull(estimate) %>%
  round(3)

coef_means <- round(mean(c(reg_coef4_1,reg_coef4_2,reg_coef4_3,reg_coef4_4,reg_coef4_5)),2)

@
\begin{itemize}
\item Equivalently, we subset to each value of $x$, and find each slope
\item Then average these slopes, $\beta_1=\Sexpr{coef_means}$
\item Impossible with truly continuous variables
\end{itemize}
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item Regression is also a \textbf{Conditional Expectation Function}
\pause
\item Conditional on $x$, what is our expectation (mean value) of $y$?
\end{itemize}
\small
\begin{center}
\item $y_i = \alpha + \beta_1 D_i + \epsilon_i$ \\
\pause
\item $Attitude_i = \alpha + \beta_1 Income_i + N(0,\sigma^2)$ \\
\pause
\item $Attitude_i = 2.235 - 0.000818 * Income_i + N(0,2.38)$ \\
\pause
\item $(Attitude_i | Income_i=3000) = 2.235 - 0.000818 * 3000 + N(0,2.38)$ \\
\pause
\item $(Attitude_i | Income_i=3000) = \Sexpr{round(2.235-0.000818*3000,2)} + N(0,2.38)$ \\
\pause
\item $E(Attitude | Income_i=3000) = \Sexpr{round(2.235-0.000818*3000,2)}$
\end{center}
\normalsize
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item Regression is also a \textbf{Conditional Expectation Function}
\item Conditional on $x$, what is our expectation (mean value) of $y$?
\end{itemize}
\small
\begin{center}
\item $y_i = \alpha + \beta_1 D_i + \epsilon_i$
\item $Attitude_i = \alpha + \beta_1 Income_i + N(0,\sigma^2)$
\item $Attitude_i = 2.235 - 0.000818 * Income_i + N(0,2.38)$
\end{center}
\normalsize
\pause
\begin{itemize}
\item $E(y|x)$, $E(Attitude | Income)$
\begin{itemize}
\item When income is 3000, the average attitude is \Sexpr{round(2.235-0.000818*3000,2)}
\pause
\item When income  is 6000, the average attitude is \Sexpr{round(2.235-0.000818*6000,2)}
\pause
\item When income  is -1000, the average attitude is \Sexpr{round(2.235-0.000818*-1000,2)}
\end{itemize}
\pause
\item $E(attitude|income,age,gender,municipality)$
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  geom_point(x=3000,y=2.235-0.000818*3000, col="red", size=4) +
  geom_point(x=6000,y=2.235-0.000818*6000, col="blue", size=4) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1b,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=

preds_3000 <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=3000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(predicted_value)

preds_6000 <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=6000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(predicted_value)

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  geom_point(x=3000,y=preds_3000, col="red", size=0.2) +
  geom_point(x=6000,y=preds_6000, col="blue", size=0.2) +
  geom_point(x=6000,y=2.235-0.000818*6000, col="blue", size=4) +
  geom_point(x=3000,y=2.235-0.000818*3000, col="red", size=4) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item How do we work out the conditional expectation? We estimate $\beta$
\pause
\item But we \textbf{NEVER} know the exact value of $\beta$
\pause
\item Regression \textbf{estimates a distribution} for $\beta$
\pause
\begin{itemize}
\item That's why every $\beta$ comes with a standard error
\pause
\end{itemize}
\end{itemize}
\begin{multicols}{2}
<<beta_dist_table, results='asis'>>=
d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), digits=6)
@
\columnbreak
<<beta_dist, fig.height=2.3, fig.width=2.5>>=
beta <- tibble(beta=rnorm(10000,-0.0008175,0.00007832))

beta %>% ggplot() + geom_line(aes(x=beta),stat="density") +
  theme_classic() +
  xlab("Beta")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item How do we work out the conditional expectation? We estimate $\beta$
\item But we \textbf{NEVER} know the exact value of $\beta$
\item Regression \textbf{estimates a distribution} for $\beta$
\begin{itemize}
\item That's why every $\beta$ comes with a standard error
\end{itemize}
\end{itemize}
\begin{multicols}{2}
<<beta_dist_table_2, results='asis'>>=
d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), digits=6)
@
\columnbreak
<<beta_dist_2, fig.height=2.3, fig.width=2.5>>=
beta <- tibble(beta=rnorm(10000,-0.0008175,0.00007832))

beta %>% ggplot() + geom_line(aes(x=beta),stat="density") +
  geom_vline(xintercept=-0.0008175, lty=2) +
  geom_text(aes(x=-0.0008175,200,label="Mean=-0.0008175")) +
  theme_classic()
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item How do we work out the conditional expectation? We estimate $\beta$
\item But we \textbf{NEVER} know the exact value of $\beta$
\item Regression \textbf{estimates a distribution} for $\beta$
\begin{itemize}
\item That's why every $\beta$ comes with a standard error
\end{itemize}
\end{itemize}
\begin{multicols}{2}
<<beta_dist_table_3, results='asis'>>=
d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), digits=6)
@
\columnbreak
<<beta_dist_3, fig.height=2.7, fig.width=2.7>>=
beta <- tibble(beta=rnorm(10000,-0.0008175,0.00007832))

beta %>% ggplot() + geom_line(aes(x=beta),stat="density") +
  geom_vline(xintercept=-0.0008175, lty=2) +
  geom_text(aes(x=-0.0008175,200,label="+/- 1.96*SE")) +
  geom_segment(aes(x=-0.0008175-1.96*0.00007832,xend=-0.0008175+1.96*0.00007832, y=350, yend=350), lty=2) +
  theme_classic()
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
\begin{itemize}
\item How do we work out the conditional expectation? We estimate $\beta$
\item But we \textbf{NEVER} know the exact value of $\beta$
\item Regression \textbf{estimates a distribution} for $\beta$
\begin{itemize}
\item That's why every $\beta$ comes with a standard error
\end{itemize}
\end{itemize}
\begin{multicols}{2}
<<beta_dist_table_4, results='asis'>>=
d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), digits=6)
@
\columnbreak
<<beta_dist_4, fig.height=2.3, fig.width=2.5>>=
beta <- tibble(beta=rnorm(10000,-0.0008175,0.00007832))

beta %>% ggplot() + geom_line(aes(x=beta),stat="density") +
  geom_vline(xintercept=-0.0008175, lty=2) +
  geom_text(aes(x=-0.0008175,200,label="95% CI")) +
  geom_segment(aes(x=-0.0008175-1.96*0.00007832,xend=-0.0008175+1.96*0.00007832, y=350, yend=350), lty=2) +
  geom_segment(aes(x=-0.0008175-1.96*0.00007832,xend=-0.0008175-1.96*0.00007832,y=0,yend=350), lty=2) +
  geom_segment(aes(x=-0.0008175+1.96*0.00007832,xend=-0.0008175+1.96*0.00007832,y=0,yend=350), lty=2) +
  theme_classic()
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1d,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
midpoint <- 2.235 + 4500*-0.0008175
intercepts <- midpoint - beta*4500

coefs <- tibble(alpha=pull(intercepts),
                beta=pull(beta))

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs[1,],aes(intercept=alpha,slope=beta)) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1e,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs[1:2,],aes(intercept=alpha,slope=beta)) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1f,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs[1:3,],aes(intercept=alpha,slope=beta)) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1g,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs[1:20,],aes(intercept=alpha,slope=beta)) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1g2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs,aes(intercept=alpha,slope=beta)) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1h,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
preds_3000_ev <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=3000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(expected_value)

preds_6000_ev <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=6000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(expected_value)

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs,aes(intercept=alpha,slope=beta)) +
  geom_point(x=3000,y=preds_3000_ev, col="red", size=0.2) +
  geom_point(x=6000,y=preds_6000_ev, col="blue", size=0.2) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{Regression as Conditional Expectation}
<<cond_exp1i,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
preds_3000_ev <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=3000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(expected_value)

preds_6000_ev <- d %>% zelig(redist~income, data=., model="ls", cite=F) %>%
  setx(income=6000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  pull(expected_value)

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_abline(data=coefs,aes(intercept=alpha,slope=beta)) +
  geom_point(x=3000,y=preds_3000, col="red", size=0.2) +
  geom_point(x=6000,y=preds_6000, col="blue", size=0.2) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + 
  xlim(2000,7000) + 
  ylim(-8,6)
@
\end{frame}


<<corr_regn>>=
corr_regn <- tibble(x=rnorm(100,2,1),
       y=x+rnorm(100,0,1))

corr <- corr_regn %>% summarize(corr=cor(x,y)) %>% pull(corr) %>% round(3) 
@

\begin{frame}
\frametitle{Regression as (Partial) Correlation}
\begin{itemize}
\item Regression with two variables is very similar to calculating correlation:
\pause
\item $\hat{\beta}=cor(x,y) * \frac{\sigma_Y}{\sigma_X}$
\pause
\end{itemize}
\begin{multicols}{2}
<<corr_regn_fig1, fig.height=3, fig.width=3>>=
corr_regn %>% ggplot() + 
  geom_point(aes(x=x,y=y)) +
  theme_classic()
@
\columnbreak
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as (Partial) Correlation}
\begin{itemize}
\item Regression with two variables is very similar to calculating correlation:
\item $\hat{\beta}=cor(x,y) * \frac{\sigma_Y}{\sigma_X}$
\end{itemize}
\begin{multicols}{2}
<<corr_regn_fig2, fig.height=3, fig.width=3>>=
corr_regn %>% ggplot() + 
  geom_point(aes(x=x,y=y)) +
  theme_classic()
@
\columnbreak
\begin{itemize}
\item Correlation is \Sexpr{corr}
\pause
\item Regression Results:
\end{itemize}
<<corr_regn_table2, results='asis'>>=
corr_regn %>% zelig(y~x, data=., model="ls", cite=F) %>% 
  from_zelig_model() %>% 
  tidy() %>%
  select(term, estimate) %>%
  xtable(row.names=F, digits=3)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as (Partial) Correlation}
\begin{itemize}
\item Regression with two variables is very similar to calculating correlation:
\item $\hat{\beta}=cor(x,y) * \frac{\sigma_Y}{\sigma_X}$
\end{itemize}
\begin{multicols}{2}
<<corr_regn_fig3, fig.height=3, fig.width=3>>=
corr_regn %>% mutate_at(vars(x,y),scale) %>% 
  ggplot() + 
  geom_point(aes(x=x,y=y)) +
  theme_classic()
@
\columnbreak
\begin{itemize}
\item Correlation is \Sexpr{corr}
\item It's \textit{identical} if we standardize both variables first ($\frac{(x-\bar{x})}{\sigma_x}$)
\item Standardized Regression Results:
\end{itemize}
<<corr_regn_table3, results='asis'>>=
corr_regn %>% mutate_at(vars(x,y),scale) %>% 
  zelig(y~x, data=., model="ls", cite=F) %>% 
  from_zelig_model() %>% 
  tidy() %>%
  select(term, estimate) %>%
  xtable(row.names=F, digits=3)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{Regression as (Partial) Correlation}
\begin{itemize}
\item Regression with \textbf{multiple} variables is very similar to calculating \textbf{partial} correlation
\pause
\item $y_i = \alpha + \beta_1 x_1 + \beta_2 x_2 +\epsilon_i$
\pause
\item Just a small difference in the denominator (how we standardize the measure)
\pause
\end{itemize}
$$\beta_{x_1} = \frac{r_{yx_1} - r_{yx_2}r_{x_1x_2}}{1-r^2_{x_1x_2}}$$
$$r_{yx_1|x_2} = \frac{r_{yx_1} - r_{yx_2}r_{x_1x_2}}{\sqrt{(1-r^2_{yx_2})(1-r^2_{x_1x_2})}}$$
\begin{itemize}
\item \textbf{There is no magic in regression, it's just 'extra' correlation}
\end{itemize}
\end{frame}



\section{Guide to 'Smart' Regression}

\begin{frame}
\frametitle{Regression Guide}
\begin{enumerate}
\item We will use regression throughout this course
\pause
\item But in a very \textbf{precise} way for each methodology
\pause
\item There are fundamental best practices that apply to all the methodologies
\end{enumerate}
\end{frame}

\begin{frame}
\frametitle{Regression Guide}
\begin{enumerate}
\item \textbf{Choose Variables and Measures:} To test a specific hypothesis
\pause
\item \textbf{Choose a Model/Link Function:} To match the data type of your outcome variable
\pause
\item \textbf{Choose Covariates:} To make specific comparisons
\pause
\item \textbf{Choose Fixed Effects:} To focus on comparisons at a specific level
\pause
\item \textbf{Choose Error Structure:} To match known dependencies/clustering in the data or sampling
\pause
\item \textbf{Interpret the Coefficients:} To match the type/scale of the explanatory variable, outcome variable and model
\pause
\item \textbf{Predict Meaningful Comparisons:} To communicate your findings
\end{enumerate}
\end{frame}

\begin{frame}
\frametitle{1. Variables and Measures}
\begin{itemize}
\item For the research question ``Does income affect attitudes to redistribution?''
\pause
\item What measure of income should we use?
\pause
\begin{itemize}
\item Pre-tax, post-tax, after government benefits?
\end{itemize}
\item It depends on the theory we are testing
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{2. Regression Models}
The Regression Model reflects the data type of the outcome variable:
\begin{itemize}
\item Continuous -> Ordinary Least Squares  
\begin{itemize}
\item Pick a precise number that reflects your attitude to redistribution
\end{itemize}
\item Binary -> Logit  
\begin{itemize}
\item Do you support redistribution, yes or no?
\end{itemize}
\item Unordered categories -> Multinomial logit  
\begin{itemize}
\item Do you think redistribution is a western, oriental or african concept?
\end{itemize}
\item Ordered categories -> Ordered logit  
\begin{itemize}
\item Do you want a lot more, more, the same, less, or a lot less redistribution?
\end{itemize}
\item Count -> Poisson  
\begin{itemize}
\item In the past year, how many times have you complained about redistribution?
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{3. Covariates}
\begin{itemize}
\item Which covariates should we include?
\pause
\item Which comparisons do we want to make?
\pause
\item Control for gender if we want to compare men with men, women with women
\pause
\item Most crucial where there is theory or evidence that this variable could be an \textbf{omitted variable}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{4. Fixed Effects}
\begin{itemize}
\item Data are usually hierarchical: countries, states, municipalities, neighbourhoods, families, individuals
\pause
\item A fixed effect for countries means we only compare people within the same country
\pause
\item Removing \textit{ALL} the variation between countries
\begin{itemize}
\item If rich countries have stronger attitudes to redistribution, we control for this
\end{itemize}
\pause
\item Our question becomes: How do variations within income in the same country affect attitudes to redistribution?
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{5. Errors Structure}
\begin{itemize}
\item After all of our controls and fixed effects, we need to think about the errors - the bit we cannot explain
\pause
\item An assumption of regression analysis is that the errors are independent
\begin{itemize}
\item Knowing the value of one error tells you \textit{nothing} about the value of the next error
\end{itemize}
\item But your attitudes to redistribution are probably very similar to everyone you live with, even after controlling for income etc.
\pause
\item So we don't really have 2 observations, we have closer to 1 'independent' observation
\item So the standard errors for our $\beta$'s are \textit{over-optimistic} (too small)
\pause
\item We need to adjust for these dependencies with clustered standard errors
\begin{itemize}
\item Created by the underlying structure of the data
\item Or by our data sampling process
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{5. Errors Structure}
<<beta_dist_errors_4, fig.height=2.7, fig.width=2.7>>=
beta <- tibble(beta=rnorm(10000,-0.0008175,0.00007832),
               beta_2=rnorm(10000,-0.0008175,0.00014832))

beta %>% ggplot() + geom_line(aes(x=beta),stat="density") +
  geom_line(aes(x=beta_2),stat="density") +
  geom_vline(xintercept=-0.0008175, lty=2) +
    theme_classic()
@
\end{frame}

\begin{frame}
\frametitle{6. Interpreting Regression Results}
\begin{itemize}
\item Difficult! It depends on the scale of the explanatory variable, scale of the outcome, the regression model we used, and the presence of any interaction
\item Basic OLS:
\begin{itemize}
\item 1 [unit of explanatory variable] change in the explanatory variable is associated with a $\beta$ [unit of outcome variable] change in the outcome
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{6. Interpreting Regression Results}
\begin{itemize}
\item Difficult! It depends on the scale of the explanatory variable, scale of the outcome, the regression model we used, and the presence of any interaction
\item Logit:
\begin{itemize}
\item 1 [unit of explanatory variable] change in the explanatory variable is associated with a $\beta$ [unit of outcome variable] change in the outcome
\end{itemize}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
\begin{itemize}
\item The coefficient on the regression of income on attitude to redistribution is -0.000818
\begin{itemize}
\pause
\item So??? What do we learn from this?
\pause
\item Coefficients are hard to interpret, and depend on how we measure each variable
\item And p-values are arbitrary
\end{itemize}  
\pause
\item Better to make specific \textit{predictions} of how changes in $X$ produce changes in $Y$
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
$$Attitude_i = \alpha + \beta_1 \text{ Income}_i + \epsilon_i$$ \\
\pause
$$Attitude_i = 2.235 - 0.000818 \text{ Income}_i + N(0,2.378)$$ \\
\pause
\textbf{If Income is 3000:}  \\
$$Attitude_i = 2.235-0.000818*3000 + N(0,2.378)$$ \\
$$Attitude_i = \Sexpr{2.235-0.000818*3000} + N(0,2.378)$$
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
$$Attitude_i = \alpha + \beta_1 \text{ Income}_i + \epsilon_i$$ \\
$$Attitude_i = 2.235 - 0.000818 \text{ Income}_i + N(0,2.378)$$ \\
\textbf{If Income is 6000:}  \\
$$Attitude_i = 2.235-0.000818*6000 + N(0,2.378)$$ \\
$$Attitude_i = \Sexpr{2.235-0.000818*6000} + N(0,2.378)$$
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
$$Attitude_i = \alpha + \beta_1 \text{ Income}_i + \epsilon_i$$
$$Attitude_i = 2.235 - 0.000818 \text{ Income}i + N(0,2.378)$$
\textbf{Increasing Income from 3000 to 6000:} \\
$$\Delta Attitude_i = (2.235-0.000818*6000) - (2.235-0.000818*3000)$$
$$\Delta Attitude_i = \Sexpr{2.235-0.000818*6000} - \Sexpr{2.235-0.000818*3000}$$
$$\Delta Attitude_i = \Sexpr{2.235-0.000818*6000 - (2.235-0.000818*3000)}$$
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
<<predictions1,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=

d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  geom_point(x=3000,y=2.235-0.000818*3000, col="red", size=4) +
  geom_point(x=6000,y=2.235-0.000818*6000, col="blue", size=4) +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
\begin{multicols}{2}
Predicted Values:
<<predictions2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
pvs_low <- d %>% zelig(redist ~ income, data=., model="ls", cite=F) %>% 
  setx(income=3000) %>% 
  sim() %>%
  zelig_qi_to_df()

pvs_high <- d %>% zelig(redist ~ income, data=., model="ls", cite=F) %>% 
  setx(income=6000) %>% 
  sim() %>%
  zelig_qi_to_df()

pvs <- pvs_low %>% bind_rows(pvs_high) %>%
  select(`temp_fitted[i, ]`,predicted_value) %>%
  rename("Income"=`temp_fitted[i, ]`)

pvs %>% ggplot() + 
  geom_line(aes(x=predicted_value, group=factor(Income), col=factor(Income)),stat="density") +
  theme_classic() + xlab("Attitude to Redistribution")
@
\columnbreak
First Differences:
<<predictions3,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
pvs  %>%
  mutate(id=rep(1:N,2)) %>% 
  spread(key="Income",value="predicted_value") %>%
  mutate(First_Difference=`6000`-`3000`) %>%
  ggplot() +
  geom_line(aes(x=First_Difference),stat="density") +
  geom_vline(xintercept=0,lty=2) +
  theme_classic() + xlab("Attitude to Redistribution")
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
\begin{itemize}
\item The regression model matters because the wrong model makes non-sensical predictions
\item Consider a binary outcome: $Gender_i = \alpha + \beta Income_i + \epsilon_i$
\item Compare the OLS and Logit regression tables:
\end{itemize}
\begin{multicols}{2}
<<preds_1_ols,results='asis'>>=
  d %>% zelig(as.numeric(as.character(gender))~income, data=., model="ls", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"))
@
\columnbreak
<<preds_1_logit,results='asis'>>=
  d %>% zelig(as.numeric(as.character(gender))~income, data=., model="logit", cite=F) %>%
  from_zelig_model() %>%
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"))
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{7. Predictions from Regressions}
\begin{itemize}
\item The regression model matters because the wrong model makes non-sensical predictions
\item Consider a binary outcome: $Gender_i = \alpha + \beta Income_i + \epsilon_i$
\item Compare the OLS and Logit \textbf{predictions} of gender for an income of R\$3000:
\end{itemize}
\begin{multicols}{2}
<<preds_1_ols_chart,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=4>>=
  d %>% zelig(as.numeric(as.character(gender))~income, data=., model="ls", cite=F) %>%
  setx(income=3000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  ggplot() +
  geom_line(aes(x=predicted_value),stat="density") +
  theme_classic()
@
\columnbreak
<<preds_1_logit_chart,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=4>>=
  d %>% zelig(as.numeric(as.character(gender))~income, data=., model="logit", cite=F) %>%
  setx(income=3000) %>%
  sim() %>%
  zelig_qi_to_df() %>%
  mutate(predicted_value=factor(predicted_value)) %>%
  ggplot() +
  geom_bar(aes(x=predicted_value)) +
  theme_classic()
@
\end{multicols}
\end{frame}

\section{What Does Regression NOT Do?}

\begin{frame}
\frametitle{What Does Regression NOT Do?}
\begin{itemize}
\item Remember, regression is just fancy correlation
\item Even after following all this guidance, Regression does NOT:
\begin{enumerate}
\item \textit{Explain} anything
\item Make bad data better
\item Tell you which model is 'best'
\item Guarantee you are making sensible comparisons
\end{enumerate}
\item These all require \textbf{research design}, \textbf{theory} and \textbf{assumptions}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{What Does Regression NOT Do?}
\begin{itemize}
\item \textbf{Correlation is not causation}
\pause
\begin{itemize}
\item If we look hard enough we can always find correlations
\pause
\item By chance...
\pause
\item Due to complex social patterns...
\pause
\item But we cannot conclude that $D$ causes or explains $Y$
\pause
\end{itemize}
\item \textit{More} data will not help
\pause
\item The problem is the \textit{type} of data; it does not allow us to answer the causal question 
\end{itemize}
\end{frame}

\setbeamercolor{background canvas}{bg=}
\includepdf[pages={1}]{chart_1.pdf}

\setbeamercolor{background canvas}{bg=}
\includepdf[pages={1}]{chart_2.pdf}

\setbeamercolor{background canvas}{bg=}
\includepdf[pages={1}]{chart_3.pdf}

\setbeamercolor{background canvas}{bg=}
\includepdf[pages={1}]{chart_4.pdf}

\setbeamercolor{background canvas}{bg=}
\includepdf[pages={1}]{Chocolate.pdf}

\begin{frame}
\frametitle{What Does Regression NOT Do?}
\begin{itemize}
\item Lots of things can go 'wrong' with regression:
\begin{enumerate}
\item Omitted Variable Bias
\item Reverse Causation
\item Selection Bias
\item Measurement Bias
\item Lack of Overlap, Model Dependence
\end{enumerate}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{1. Omitted Variable Bias}
<<confound3b,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{1. Omitted Variable Bias}
<<confound3c,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist), color="black",size=0.7) + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{1. Omitted Variable Bias}
<<confound2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist, group=gender,color=gender), size=0.7) + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}


\begin{frame}
\frametitle{1. Omitted Variable Bias}
<<confound3,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d %>% ggplot() + 
  geom_point(aes(x=income,y=redist, group=gender,color=gender), size=0.7) + 
  geom_smooth(data=d[d$gender==1,], aes(x=income,y=redist),method="lm",se=FALSE, color="blue") + 
  geom_smooth(data=d[d$gender==0,], aes(x=income,y=redist),method="lm", se=FALSE, color="red") + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{2. Reverse Causation}
\begin{itemize}
\item Significant regression coefficients just reflect the values in our dataset moving together
\pause
\item Does the 'direction' of regression  matter? I.e. Does regression treat $X$ and $Y$ differently?
\pause
\item Yes! 
\begin{multicols}{2}
<<rev_cause_1,results='asis'>>=
reg_rev_caus1 <- d %>% mutate(income=scale(income),
                              redist=scale(redist)) %>% 
  lm(redist~income + gender, data=.) %>% 
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"))
@
\columnbreak
<<rev_cause_2,results='asis'>>=
reg_rev_caus2 <- d %>% mutate(income=scale(income),
                              redist=scale(redist)) %>%
  lm(income~redist + gender, data=.) %>% 
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"))
@
\end{multicols}
\item Remember, regression measures the \textit{vertical} (not diagonal) distances to the regression line
\begin{itemize}
\item It minimizes the prediction errors for $Y$
\end{itemize}
\item But that doesn't mean it identifies the direction of causation!
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item There are four selection risks:
\begin{enumerate}
\item \textbf{Selection into existence}
\item \textbf{Selection into survival}
\item \textbf{Selection into the dataset}
\item \textbf{Selection into treatment}
\end{enumerate}
\item In each case, we don't see the \textit{full} relationship between $X$ and $Y$
\item So our regression estimates are biased
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item Imagine we do not see 'rich' units with high income (above R\$4000)
\end{itemize}
<<selection1,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d_sel <- d %>% mutate(rich=ifelse(income>=4000,"Rich","Poor")) 

d_sel %>% ggplot() + 
  geom_point(data=d_sel[d_sel$income<4000,], aes(x=income,y=redist, group=rich,color=rich), size=0.7) + 
  geom_smooth(data=d[d$income<4000,], aes(x=income,y=redist),method="lm",se=FALSE, color="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6) +
  scale_colour_manual(values = c("black", "grey"))
@
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item Imagine we do not see 'rich' units with high income (above R\$4000)
\end{itemize}
<<selection2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d_sel %>%  ggplot() + 
  geom_point(aes(x=income,y=redist, group=rich,color=rich), size=0.7) + 
  geom_smooth(data=d[d$income<4000,], aes(x=income,y=redist),method="lm",se=FALSE, color="black") + 
  geom_smooth(data=d, aes(x=income,y=redist),method="lm", se=FALSE, col="grey") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2000,7000) + ylim(-8,6) +
  scale_colour_manual(values = c("black", "grey"))
@
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item There are four selection risks:
\begin{enumerate}
\item \textbf{Selection into existence:}
\begin{itemize}
\item Where do units (eg. political parties) come from?
\item Probably only parties that have a chance of success are formed
\item Does forming a party cause electoral success? Not for most people!
\end{itemize}
\end{enumerate}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item There are four selection risks:
\begin{enumerate}
\setcounter{enumi}{1}
\item \textbf{Selection into survival:}
\begin{itemize}
\item Certain types of units disappear, so the units we see don't tell the full story
\end{itemize}
\end{enumerate}
\end{itemize}
\begin{multicols}{2}
\includegraphics[scale=0.25]{Bombers.pdf}
\columnbreak
\begin{itemize}
\item Where would additional armour protect bombers?
\item Returned bombers got hit
\item But we do not know where \textit{bombers that did not return} got hit
\end{itemize}
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item There are four selection risks:
\begin{enumerate}
\setcounter{enumi}{2}
\item \textbf{Selection into the dataset:}
\begin{itemize}
\item Our dataset may not be representative
\item Only units with particular values of $X$ and $Y$ enter the dataset
\item Eg. If survey respondents who refuse are different from those who respond
\end{itemize}
\end{enumerate}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{3. Selection Bias}
\begin{itemize}
\item There are four selection risks:
\begin{enumerate}
\setcounter{enumi}{3}
\item \textbf{Selection into treatment:}
\begin{itemize}
\item All units are in our dataset, but they \textit{choose} their treatment value
\item Who chooses treatment? Those with the most to benefit, i.e. depending on $Y$!
\item Applying treatment to the others would probably have a very different effect
\end{itemize}
\end{enumerate}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{4. Measurement Bias}
\begin{itemize}
\item What happens if we measure our variables wrongly?
\footnotesize
\begin{table}[htbp]
  \centering
  \caption{Effects of Measurement Error}
    \begin{tabular}{|l|l|p{4cm}|}
    \hline
          & Measured with Bias & Measured with Random Noise \bigstrut\\
    \hline
    Outcome Variable & Effect biased & No bias but wider standard errors \bigstrut\\
    \hline
    Treatment Variable & Effect biased & Effect biased to zero \bigstrut\\
    \hline
    \end{tabular}%
  \label{tab:addlabel}%
\end{table}%
\normalsize
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{4. Measurement Bias}
\begin{itemize}
\item What happens if we measure our variables wrongly?
\item No extra noise:
\end{itemize}
\begin{multicols}{2}
<<measure2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d_measure <- d %>% mutate(income=income/1000)

d_measure %>% ggplot() + 
  geom_point(aes(x=income,y=redist), size=0.7) + 
  geom_smooth(aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2,7) + ylim(-8,6)
@
\columnbreak
<<measure2_table, results='asis'>>=
d_measure %>% 
  lm(redist~income, data=.) %>% 
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), header=F)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{4. Measurement Bias}
\begin{itemize}
\item What happens if we measure our variables wrongly?
\item Noise in the \textbf{outcome variable}:
\end{itemize}
\begin{multicols}{2}
<<measure2b,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
set.seed(5679)
d_measure %>% mutate(redist=redist+rnorm(nrow(d),0,3.5)) %>%
  ggplot() + 
  geom_point(aes(x=income,y=redist), size=0.7) + 
  geom_smooth(aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2,7) + ylim(-8,6)
@
\columnbreak
<<measure2b_table, results='asis'>>=
set.seed(5679)
d_measure %>% mutate(redist=redist+rnorm(nrow(d),0,3.5)) %>%
  lm(redist~income, data=.) %>% 
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), header=F)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{4. Measurement Bias}
\begin{itemize}
\item What happens if we measure our variables wrongly?
\item Noise in the \textbf{explanatory} variable:
\end{itemize}
\begin{multicols}{2}
<<measure2c,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
d_measure %>% mutate(income=income+rnorm(nrow(d),0,2)) %>% 
  ggplot() + 
  geom_point(aes(x=income,y=redist), size=0.7) + 
  geom_smooth(aes(x=income,y=redist),method="lm", se=FALSE, col="black") + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(2,7) + ylim(-8,6)
@
\columnbreak
<<measure2c_table, results='asis'>>=
d_measure %>% mutate(income=income+rnorm(nrow(d),0,2)) %>%
  lm(redist~income, data=.) %>% 
  stargazer(single.row = TRUE, column.sep.width = "1pt", font.size="tiny", keep.stat=c("n"), header=F)
@
\end{multicols}
\end{frame}

\begin{frame}
\frametitle{5. Lack of Overlap}
\begin{itemize}
\item Regression normally helps us pick appropriate comparisons
\begin{itemize}
\item Eg. Comparing only among men, what is the effect of income on attitudes to redistribution? 
\end{itemize}
\item But what if there are no women with high income?
\item Regression \textit{creates} comparisons for us
\begin{itemize}
\item How? That's where the functional for of the regression comes in
\item A linear regression interpolates/extrapolates \textit{linearly} to 'create' comparison cases
\end{itemize}
\item Lack of overlap probably means we \textit{cannot} explain outcomes with this data
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{5. Lack of Overlap}
<<overlap1,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
set.seed(05410)
N <- 1000
gender <- rbinom(N,1,0.5)
income <- gender*2000+rnorm(N,4000,300)
redist <- gender*(-3)+rnorm(N,0,2)

d2 <- data.frame(gender,income,redist)
d2$gender <- as.factor(d2$gender)

d2 %>% ggplot() + 
  geom_point(aes(x=income,y=redist, group=gender,color=gender), size=0.7) + 
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(3000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{5. Lack of Overlap}
<<overlap2,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
set.seed(05410)
N <- 1000
gender <- rbinom(N,1,0.5)
income <- gender*2000+rnorm(N,4000,300)
redist <- gender*(-3)+rnorm(N,0,2)

d2 <- data.frame(gender,income,redist)
d2$gender <- as.factor(d2$gender)

d2 %>% ggplot() + 
  geom_point(aes(x=income,y=redist, group=gender,color=gender), size=0.7) + 
  geom_smooth(aes(x=income,y=redist), method="lm", se=F, col="black") +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(3000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{5. Lack of Overlap}
<<overlap3,echo=FALSE,warning=FALSE,message=FALSE,fig.keep='high',fig.height=3.3, fig.width=5>>=
set.seed(05410)
N <- 500
gender <- as.factor(0)
income <- 2000+rnorm(N,4000,300)
redist <- (2.5)+rnorm(N,0,2)

d3 <- data.frame(gender,income,redist)

d4 <- d2 %>% bind_rows(d3)

d4 %>% ggplot() + 
  geom_point(aes(x=income,y=redist, group=gender,color=gender), size=0.7) + 
  geom_smooth(data=d2,aes(x=income,y=redist), method="lm", se=F, col="black") +
  geom_smooth(data=d4[d4$gender==0,],aes(x=income,y=redist), method="lm", se=F, col="black") +
  theme_classic() + xlab("Income") + ylab("Attitude to Redistribution") + xlim(3000,7000) + ylim(-8,6)
@
\end{frame}

\begin{frame}
\frametitle{5. Lack of Overlap}
\begin{itemize}
\item With more than a few variables, lack of overlap is \textit{guaranteed}
\item 6 variables with 10 categories each = $10^6 = 1,000,000$ possibilities, and a sample of maybe 5,000?
\item Common datasets have 0\% counterfactuals present in the data (King 2006)
\begin{itemize}
\item How many 45 year-old female accountants with a PhD and a cat who live in Centro are there?
\item And we need some that are low-income and some that are high-income
\end{itemize}
\item A problem of \textbf{multi-dimensionality}
\item And of \textbf{model dependence} - our results depend on the functional form in our regression model
\end{itemize}
\end{frame}


% Stress - in prep for week 2 - that regression only buys you (conditional) correlation

%Chenage all examples to age-gender-income

\end{document}


%setwd('C:\\Users\\Jonny\\Google Drive\\Academic\\USP\\Class\\Week 1 - Intro\\Lecture Slides')
%knitr::knit("Slides_Wk1_intro_5.Rnw")